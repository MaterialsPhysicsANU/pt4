version  = 0.5.7;

#define SIZE 256
#define T_END 0.5

#define NPROJECTIONS 400.0
#define REVOLUTIONS  4.0

size_x = SIZE;
size_y = SIZE;
size_z = SIZE;

projection_integrand = INTENSITY;

noise_seed = 0;
photon_flux = 4096E6; // photons/([0,1]^2)
noise_quantisation = 0;
noise_poisson = 1;
noise_gaussian = 25;//per pixel

unit_time_per_volume = 0.1;
revolutions_per_unit_time = (NPROJECTIONS*REVOLUTIONS-1)/((NPROJECTIONS+1)*T_END);
projections_per_revolution = NPROJECTIONS*(NPROJECTIONS+1)/(NPROJECTIONS*REVOLUTIONS-1);
projection_supersampling_ratio = 3;

ellipsoid sphere_noise_coarse = {
	domain domain0 = {
		.len = T_END,
		.val = {
			.loc = {
				.pos = {0,0.0,0,}	,
				.scale = {0.7+0.1*t,0.7+0.1*t,0.7+0.1*t,}	,
				.axis = {0,0,1,}	,
				.angle = 0			,
			},
			.atn = {
				.blend = ADD,
				.fill = FILL_NOISE,
				.atnf = (1+0.1*s)/pow(0.7+0.1*t\,3.0),//pow is for conservation of mass
				.loc = {
					.pos = {0.53,0,0,},
					.scale = {0.1,0.1,0.1,},
					.axis = {0.7,1.2,-0.7,},
					.angle = 1.1,
				},
			},
		},
	},
};

ellipsoid sphere_noise_fine = {
	domain domain0 = {
		.len = T_END,
		.val = {
			.loc = {
				.pos = {0,0.0,0,}	,
				.scale = {0.7+0.1*t,0.7+0.1*t,0.7+0.1*t,}	,
				.axis = {0,0,1,}	,
				.angle = 0			,
			},
			.atn = {
				.blend = ADD,
				.fill = FILL_NOISE,
				.atnf = (0.2*s)/pow(0.7+0.1*t\,3.0),//pow is for conservation of mass
				.loc = {
					.pos = {0,0,0,},
					.scale = {0.02,0.02,0.02,},
					.axis = {1.1,1.4,0.8,},
					.angle = 2.1,
				},
			},
		},
	},
};